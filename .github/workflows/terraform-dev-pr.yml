name: terraform_dev_pr

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'environments/dev/**'

jobs:
  DEV:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Setup 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.5

      - name: terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        id: init
        working-directory: ./environments/${{ vars.ENVIRONMENT }}
        run: terraform init

      - name: Post Init
        if: always() && github.ref != 'refs/heads/main' && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          commenter_type: init
          commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
          commenter_exitcode: ${{ steps.init.outputs.exitcode }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform plan
        id: plan
        working-directory: ./environments/${{ vars.ENVIRONMENT }}
        run: terraform plan

      - name: Post plan
        if: always() && github.ref != 'refs/heads/main' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}